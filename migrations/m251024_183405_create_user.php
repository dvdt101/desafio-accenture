<?php

use yii\db\Migration;

class m251024_183405_create_user extends Migration
{
    /**
     * {@inheritdoc}
     */
    public function safeUp()
    {
        $this->createTable('USERS', [
            'ID' => 'NUMBER(10) GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY',
            'USERNAME' => $this->string(50)->notNull(),
            'NAME' => $this->string(100)->notNull(),
            'EMAIL' => $this->string(100)->notNull(),
            'PASSWORD_HASH' => $this->string(100)->notNull(),
            'PROFILE' => $this->string(20)->notNull()->defaultValue('GESTOR'),
            'STATUS' => $this->string(10)->notNull()->defaultValue('ATIVO'),
            'AUTH_KEY' => $this->string(32),
            'ACCESS_TOKEN' => $this->string(255),
            'CREATED_AT' => $this->timestamp()->notNull()->defaultExpression('SYSTIMESTAMP'),
        ]);
        $this->execute('ALTER TABLE "USERS" ADD CONSTRAINT UQ_USER_USERNAME UNIQUE ("USERNAME")');
        $this->execute('ALTER TABLE "USERS" ADD CONSTRAINT UQ_USER_EMAIL UNIQUE ("EMAIL")');


        // Esse usuário é criado apenas para ambiente de desenvolvimento/teste.
        // Recomenda-se remover ou alterar as credenciais antes de ir para produção.
        $passwordHash = Yii::$app->security->generatePasswordHash('admin123');
        $this->insert('USERS', [
            'USERNAME' => 'admin',
            'NAME' => 'Administrador do Sistema',
            'EMAIL' => 'admin@teste.com',
            'PASSWORD_HASH' => $passwordHash,
            'PROFILE' => 'ADMINISTRADOR',
            'STATUS' => 'ATIVO',
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function safeDown()
    {
        $this->execute('ALTER TABLE USERS DROP CONSTRAINT UQ_USER_EMAIL');
        $this->execute('ALTER TABLE USERS DROP CONSTRAINT UQ_USER_USERNAME');
        $this->dropTable('USERS');
    }

    /*
    // Use up()/down() to run migration code without a transaction.
    public function up()
    {

    }

    public function down()
    {
        echo "m251024_183405_create_user cannot be reverted.\n";

        return false;
    }
    */
}
